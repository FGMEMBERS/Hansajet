<?xml version="1.0"?>
<!--
  Flight Control Computer, Sperry 1781218-50
  Modeled after HFB 320 Hansa Jet Operations Manual, Section 9.1.2
  Functions and items not marked with a reference to the manual
  are pure imagination or trial-and-error

  (c) Torsten Dreyer - Torsten@no-spam-t3r.de (ignore no-spam-)
  
  History:
  2009-11-28 initial work 
-->
<!--
  Quote from HFB 320 Operations Manual:
9.0
  The Sperry SP-40 autopilot provides three axis control of the airplane.
  Upon pilot's command the autopilot will perform the following maneuvers
  a) Coordinated turn
  b) Pitch trim
  c) Fly to preselected heading
  d) Maintain constant altitude
  e) Fly on VOR radials and ILS beams

9.3
  The autopilot will maintain the pitch attitude existing at the time of engagement. 
  Interlocks allow the system to be engaged at bank angles up to 6 degrees, thereby 
  relieving to trim the airplane accurately before engagement.
  Bank angle limited to 30 degrees
-->
<PropertyList>

  <!-- Interface properties for the autopilot model -->
  <params>
    <!-- master switch -->
    <engaged>instrumentation/sp40/afcs-engaged</engaged>

    <!-- the input properties -->
    <magnetic-heading>orientation/heading-magnetic-deg</magnetic-heading>
    <heading-bug>autopilot/settings/heading-bug-deg</heading-bug>
    <pitch>orientation/pitch-deg</pitch>
    <roll>orientation/roll-deg</roll>
    <altitude>instrumentation/altimeter[0]/pressure-alt-ft</altitude>

    <locks>
      <roll>instrumentation/sp40/locks/roll</roll>
      <pitch>instrumentation/sp40/locks/pitch</pitch>
      <yaw>instrumentation/sp40/locks/yaw</yaw>
    </locks>


    <!-- the output properties -->
    <target-heading>instrumentation/sp40/target-heading-deg</target-heading>
    <target-altitude>instrumentation/sp40/target-altitude-ft</target-altitude>
    <target-pitch>instrumentation/sp40/target-pitch-deg</target-pitch>
    <target-roll>instrumentation/sp40/target-roll-deg</target-roll>

    <heading-offset>instrumentation/sp40/heading-offset-deg</heading-offset>

    <elevator-cmd>instrumentation/sp40/elevator-cmd</elevator-cmd>
    <aileron-cmd>instrumentation/sp40/aileron-cmd</aileron-cmd>
    <rudder-cmd>instrumentation/sp40/rudder-cmd</rudder-cmd>

  </params>

  <!--  Monitor current magnetic heading for heading-hold -->
  <filter>
    <name>AP:MagHeading Monitor</name>
    <debug>false</debug>
    <enable>
      <condition>
        <not-equals>
          <property alias="/params/locks/roll"/>
          <value>mag-heading-hold</value>
        </not-equals>
      </condition>
    </enable>
    <type>gain</type>
    <input alias="/params/magnetic-heading"/>
    <output alias="/params/target-heading"/>
    <gain>1.0</gain>
  </filter>

  <!-- ===================================================== -->
  <!-- =================== PITCH AXIS ====================== -->
  <!-- ===================================================== -->
  <!--  Monitor current pitch for pitch-hold -->
  <filter>
    <name>AP:Pitch Monitor</name>
    <debug>false</debug>
    <enable>
      <condition>
        <not-equals>
          <property alias="/params/locks/pitch"/>
          <value>altitude-hold</value>
        </not-equals>
        <not-equals>
          <property alias="/params/locks/pitch"/>
          <value>pitch-hold</value>
        </not-equals>
      </condition>
    </enable>
    <type>gain</type>
    <input alias="/params/pitch"/>
    <output alias="/params/target-pitch"/>
    <gain>1.0</gain>
  </filter>

  <!--  Monitor current pressure altitude for altitude-hold -->
  <filter>
    <name>AP:Pressure Altitude Monitor</name>
    <debug>false</debug>
    <enable>
      <condition>
        <not-equals>
          <property alias="/params/locks/pitch"/>
          <value>altitude-hold</value>
        </not-equals>
      </condition>
    </enable>
    <type>gain</type>
    <input alias="/params/altitude"/>
    <output alias="/params/target-altitude"/>
    <gain>1.0</gain>
  </filter>

  <pid-controller>
    <name>AP:Altitude Hold</name>
    <debug>true</debug>
    <enable>
      <condition>
        <and>
          <property alias="/params/engaged"/>
          <equals>
            <property alias="/params/locks/pitch"/>
            <value>altitude-hold</value>
          </equals>
        </and>
      </condition>
    </enable>
    <input alias="/params/altitude"/>
    <reference alias="/params/target-altitude"/>
    <output alias="/params/target-pitch"/>
    <config>
      <Kp>0.0100</Kp>
      <beta>1.0</beta> 
      <alpha>0.1</alpha>
      <gamma>1.0</gamma>
      <Ti>20</Ti>
      <Td>0.0010</Td>
      <u_min>-5.0</u_min>
      <u_max>15.0</u_max>
    </config>
  </pid-controller>

  <pid-controller>
    <name>AP:Pitch Hold</name>
    <debug>false</debug>
    <enable>
      <condition>
        <and>
          <property alias="/params/engaged"/>
          <or>
          <equals>
            <property alias="/params/locks/pitch"/>
            <value>pitch-hold</value>
          </equals>
          <equals>
            <property alias="/params/locks/pitch"/>
            <value>altitude-hold</value>
          </equals>
          </or>
        </and>
      </condition>
    </enable>
    <input alias="/params/pitch"/>
    <reference alias="/params/target-pitch"/>
    <output alias="/params/elevator-cmd"/>
    <config>
      <Kp>-0.03</Kp>
      <beta>1.0</beta> 
      <alpha>0.1</alpha>
      <gamma>1.0</gamma>
      <Ti>7.5</Ti>
      <Td>0.0</Td>
      <u_min>-1.0</u_min>
      <u_max>1.0</u_max>
    </config>
  </pid-controller>

  <!-- ===================================================== -->
  <!-- =================== ROLL  AXIS ====================== -->
  <!-- ===================================================== -->
  <!--  first stage: Compute heading offset -->
  <!--  output is in the range -180 .. +180 degree -->
  <pi-simple-controller>
    <name>AP:Heading Offset Computer</name>
    <debug>false</debug>
    <input>
      <property alias="/params/magnetic-heading"/>
    </input>
    <reference>
      <condition>
        <equals>
          <property alias="/params/locks/roll"/>
          <value>dg-heading-hold</value>
        </equals>
      </condition>
      <property alias="/params/heading-bug"/>
    </reference>
    <reference>
      <!-- default -->
      <property alias="/params/target-heading"/>
    </reference>
    <output alias="/params/heading-offset"/>
    <config> <!-- just build the delta, no integration -->
      <Kp>1.0</Kp>
      <Ki>0.0</Ki>
    </config>
    <period>
      <min>-180</min>
      <max>180</max>
    </period>
  </pi-simple-controller>

  <!--  second stage: compute target roll based on heading offset
        rule of thumb: start level off at half bank angle
        opposite rule of thumb: bank angle is twice the heading offset
  -->
  <filter>
    <name>AP:Target Roll Computer</name>
    <debug>false</debug>
    <type>gain</type>
    <input alias="/params/heading-offset"/>
    <output alias="/params/target-roll"/>
    <gain>2.0</gain>
    <u_min>-30.0</u_min>
    <u_max>30.0</u_max>
  </filter>


  <!--  third stage: compute the aileron command
        for the target roll
    -->
  <pid-controller>
    <name>AP:Roll Hold</name>
    <debug>false</debug>
    <enable>
      <condition>
        <property alias="/params/engaged"/>
        <not-equals>
          <property alias="/params/locks/roll"/>
          <value/>
        </not-equals>
      </condition>
    </enable>
    <input alias="/params/roll"/>
    <reference alias="/params/target-roll"/>
    <output alias="/params/aileron-cmd"/>
    <config>
      <Kp>0.0020</Kp>
      <beta>1.0</beta>
      <alpha>0.1</alpha>
      <gamma>1.0</gamma>
      <Ti>1000</Ti>
      <Td>0.0</Td>
      <u_min>-1.0</u_min>
      <u_max>1.0</u_max>
    </config>
  </pid-controller>

  <!-- ========================================================================== -->
  <!-- Server Driver - Pass output commands thru a noise spike filter to avoid    -->
  <!-- rapid control inputs and simulate slow movement o the servos               -->
  <!-- Disable servos in passive-mode                                             -->
  <!-- ========================================================================== -->
  <filter>
    <name>SERVO-DRIVER:aileron</name>
    <debug>false</debug>
    <feedback-if-disabled>true</feedback-if-disabled>
    <enable>
      <condition>
        <!-- enable aileron servo if any heading mode is locked -->
        <property alias="/params/engaged"/>
        <not-equals>
          <property alias="/params/locks/roll"/>
          <value/>
        </not-equals>
      </condition>
    </enable>
    <input alias="/params/aileron-cmd"/>
    <output>/controls/flight/aileron</output>
    <type>noise-spike</type>
    <max-rate-of-change>0.5</max-rate-of-change>
  </filter>

  <filter>
    <name>SERVO-DRIVER:elevator</name>
    <debug>false</debug>
    <feedback-if-disabled>true</feedback-if-disabled>
    <enable>
      <condition>
        <!-- enable aileron servo if any altitude mode is locked -->
        <property alias="/params/engaged"/>
        <not-equals>
          <property alias="/params/locks/pitch"/>
          <value/>
        </not-equals>
      </condition>
    </enable>
    <input alias="/params/elevator-cmd"/>
    <output>/controls/flight/elevator</output>
    <type>noise-spike</type>
    <max-rate-of-change>0.2</max-rate-of-change>
  </filter>

  <filter>
    <name>SERVO-DRIVER:rudder</name>
    <debug>false</debug>
    <feedback-if-disabled>true</feedback-if-disabled>
    <enable>
      <condition>
        <property>/instrumentation/autopilot/yaw-damper</property>
      </condition>
    </enable>
    <input alias="/params/rudder-cmd"/>
    <output>/controls/flight/rudder-trim</output>
    <type>noise-spike</type>
    <max-rate-of-change>0.10</max-rate-of-change>
  </filter>

</PropertyList>
